{"version":3,"sources":["component/todoreact/todo.js","App.js","index.js"],"names":["Todo","useState","inputdata","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","onClick","index","item_todo_edited","find","editItem","updatedItems","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAkIeA,EApHF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZT,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,cAEnC,OAAIF,EACOG,KAAKC,MAAMJ,GAEX,GAMwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGIC,EAAU,WACd,GAAKd,EAEE,GAAIA,GAAaY,EACtBH,EACED,EAAMO,KAAI,SAACC,GACT,OAAIA,EAAQC,KAAOP,EACV,2BAAKM,GAAZ,IAAqBE,KAAMlB,IAEtBgB,MAIXf,EAAa,IACbU,EAAc,MACdE,GAAgB,OACX,CACL,IAAMM,EAAiB,CACrBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAERS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SApBbsB,MAAM,sBAuDR,OAJAC,qBAAU,WACNrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACnD,CAACA,IAGA,mCACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,oBAAoBC,IAAI,aACjC,4EAEJ,sBAAKF,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,YAAY,kBAAaJ,UAAU,eAClDK,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAWjC,EAAaiC,EAAMC,OAAOH,UAElDpB,EAAgB,mBAAGe,UAAU,sBAAsBS,QAAStB,EAA5C,eAA+D,mBAAGa,UAAU,qBAAqBS,QAAStB,EAA3C,kBAMpF,qBAAKa,UAAU,YAAf,SACKnB,EAAMO,KAAI,SAACC,GACR,OACI,sBAAKW,UAAU,WAAf,UACI,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACI,mBAAGA,UAAU,sBAAsBS,QAAS,kBAtD/D,SAACC,GACd,IAAMC,EAAmB9B,EAAM+B,MAAK,SAACvB,GACjC,OAAOA,EAAQC,KAAOoB,KAE1BpC,EAAaqC,EAAiBpB,MAC9BP,EAAc0B,GACdxB,GAAgB,GAgDkE2B,CAASxB,EAAQC,OAEnE,mBAAGU,UAAU,2BAA2BS,QAAS,kBA7ClE,SAACC,GAChB,IAAMI,EAAejC,EAAMkC,QAAO,SAAC1B,GAC/B,OAAOA,EAAQC,KAAOoB,KAE1B5B,EAASgC,GAyC8EE,CAAW3B,EAAQC,YALnDD,EAAQC,SAiBnD,qBAAKU,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aAAaS,QAlDlE,WACd3B,EAAS,KAiDO,SACI,2DC3GbmC,EALH,WACV,OAAO,cAAC,EAAD,KCFTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7571ec0d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./style.css\";\r\n\r\n// get the localStorage data back\r\nconst getLocalData = () => {\r\n    const lists = localStorage.getItem(\"mytodolist\");\r\n\r\n    if (lists) {\r\n        return JSON.parse(lists);\r\n    } else {\r\n        return [];\r\n    }\r\n};\r\n\r\nconst Todo = () => {\r\n    const [inputdata, setInputData] = useState(\"\");\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [isEditItem, setIsEditItem] = useState(\"\");\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n\r\n     // add the items fucnction\r\n  const addItem = () => {\r\n    if (!inputdata) {\r\n      alert(\"plz fill the data\");\r\n    } else if (inputdata && toggleButton) {\r\n      setItems(\r\n        items.map((curElem) => {\r\n          if (curElem.id === isEditItem) {\r\n            return { ...curElem, name: inputdata };\r\n          }\r\n          return curElem;\r\n        })\r\n      );\r\n\r\n      setInputData(\"\");\r\n      setIsEditItem(null);\r\n      setToggleButton(false);\r\n    } else {\r\n      const myNewInputData = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputdata,\r\n      };\r\n      setItems([...items, myNewInputData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n  \r\n\r\n    //edit the items\r\n    const editItem = (index) => {\r\n        const item_todo_edited = items.find((curElem) => {\r\n            return curElem.id === index;\r\n        });\r\n        setInputData(item_todo_edited.name);\r\n        setIsEditItem(index);\r\n        setToggleButton(true);\r\n    };\r\n\r\n\r\n    //    how to delete items section\r\n    const deleteItem = (index) => {\r\n        const updatedItems = items.filter((curElem) => {\r\n            return curElem.id !== index;\r\n        });\r\n        setItems(updatedItems);\r\n    };\r\n\r\n    // remove all the elements\r\n    const removeAll = () => {\r\n        setItems([]);\r\n    };\r\n\r\n\r\n    // adding localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem(\"mytodolist\", JSON.stringify(items));\r\n    }, [items]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src=\"./images/todo.svg\" alt=\"todologo\" />\r\n                        <figcaption>Add Your List Here ✌️</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"✍ Add Item\" className=\"form-control\"\r\n                            value={inputdata}\r\n                            onChange={(event) => setInputData(event.target.value)} />\r\n\r\n                        {toggleButton ? (<i className=\"far fa-edit add-btn\" onClick={addItem}> </i>) : (<i className=\"fa fa-plus add-btn\" onClick={addItem}> </i>)}\r\n\r\n                    </div>\r\n\r\n                    {/* show our items */}\r\n\r\n                    <div className=\"showItems\">\r\n                        {items.map((curElem) => {\r\n                            return (\r\n                                <div className=\"eachItem\" key={curElem.id}>\r\n                                    <h3>{curElem.name}</h3>\r\n                                    <div className=\"todo-btn\">\r\n                                        <i className=\"far fa-edit add-btn\" onClick={() => editItem(curElem.id)}></i>\r\n\r\n                                        <i className=\"far fa-trash-alt add-btn\" onClick={() => deleteItem(curElem.id)}></i>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                        }\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    {/* remove all button */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}>\r\n                            <span> CHECK LIST</span>\r\n                        </button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react'\r\n// import Restraunt from \"./component/Basics/Restraunt\";\r\n// import  UseState from \"./component/Hooks/useState\";\r\n// import UseEffect from \"./component/Hooks/useEffect\";\r\n// import UseReducer from \"./component/Hooks/useReducer\";\r\nimport Todo from \"./component/todoreact/todo\"\r\n\r\nconst App = () => {\r\n  return <Todo/>\r\n  \r\n};\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}